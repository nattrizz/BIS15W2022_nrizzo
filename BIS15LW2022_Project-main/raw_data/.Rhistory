selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Penguins"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "Plot of Penguins Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
gabon <- readr::read_csv("data/IvindoData_DryadVersion.csv")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library("tidyverse")
library("shiny")
library("naniar")
library("shinydashboard")
require(janitor)
library(palmerpenguins)
if (!require("tidyverse")) install.packages('tidyverse')
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
ui <- fluidPage(
titlePanel("Log 10 Homerange by Taxon"),
sidebarLayout(
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:", choices=unique(homerange$taxon)),
hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")
),
mainPanel(
plotOutput("taxonPlot")
)
)
)
server <- function(input, output) {
output$taxonPlot <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x=log10.hra)) +
geom_density(color="black", fill="steelblue", alpha=0.6)
})
}
shinyApp(ui, server)
wolves <- read_csv("data/wolves_data/wolves_dataset.csv")
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()+
facet_wrap(~pop)
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody()
)
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody()
)
shinyApp(ui, server)
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody()
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH"))
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody()
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH")))
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody(),
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH")))
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody(),
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH")))
shinyApp(ui, server)
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody(),
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH"), selected = "AK.PEN"))
shinyApp(ui, server)
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody(,
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH"), selected = "AK.PEN")))
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH"), selected = "AK.PEN")))
shinyApp(ui, server)
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH"), selected = "AK.PEN")))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()+
facet_wrap(~pop)
shinyApp(ui, server)
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH"), selected = "AK.PEN")))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()+
facet_wrap(~pop)}
shinyApp(ui, server)
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH"), selected = "AK.PEN")))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes_string(x="sex", fill="sex"))+
geom_bar() })
session$onSessionEnded(stopApp)
shinyApp(ui, server)
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH"), selected = "AK.PEN")))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes_string(x="sex", fill="sex"))+
geom_bar() })
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui<- dashboardPage(
dashboardHeader(title = "Wolf Populations"),
dashboardSidebar(disable = T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC","DENALI","ELLES","GTNP", "INT.AK","MEXICAN", "MI","MT","N.NWT","ONT","SE.AK","SNF","SS.NWT","YNP","YUCH"), selected = "AK.PEN")))
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes_string(x="sex", fill="sex"))+
geom_bar() })
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
install.packages("ggVennDiagram")
install.packages("ggworldcloud")
library(tidyverse)
library(janitor)
library("palmerpenguins")
options(scipen=999) #cancels the use of scientific notation for the session
penguins <- penguins
heartrate <- readr::read_csv("data/heartrate.csv")
heartrate <- heartrate %>%
add_column(no_drug = c(71, 79, 66, 62, 73, 81) )
homerange <- read_csv("data/modified_Tamburelloetal_HomeRangeDatabase.csv")
penguins <- penguins
heartrate <- readr::read_csv("data/heartrate.csv")
heartrate <- heartrate %>%
add_column(no_drug = c(71, 79, 66, 62, 73, 81) )
homerange <- read_csv("data/modified_Tamburelloetal_HomeRangeDatabase.csv")
head(penguins)
penguins %>%
ggplot(aes(x = island, y = body_mass_g, fill = island)) +
geom_boxplot(na.rm = TRUE)+
coord_flip()
penguins %>%
ggplot(aes(x = island, y = body_mass_g, fill = island)) +
geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
geom_violin(alpha = .5, na.rm = TRUE) +
coord_flip()
penguins %>%
filter(sex == "female") %>%
ggplot(aes(x = island, y = body_mass_g, fill = island)) +
geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
geom_violin(alpha = .5, na.rm = TRUE) +
coord_flip()
penguins %>%
ggplot(aes(x = island, y = body_mass_g, fill = species)) +
geom_violin(alpha = .3, na.rm = TRUE) +
geom_boxplot(color = "grey", alpha = .3, na.rm = TRUE) +
coord_flip()
head(homerange)
names(homerange)
homerange %>%
ggplot(aes(x= taxon, y=log10.mass, fill=taxon))+ geom_boxplot(color="teal", alpha= .3, na.rm = T)+geom_violin(alpha=.5, na.rm=T)+coord_flip()
homerange %>%
ggplot(aes(x= taxon, y=log10.mass, fill=taxon))+ geom_boxplot(color="blue", alpha= .3, na.rm = T)+geom_violin(alpha=.5, na.rm=T)+coord_flip()
homerange %>%
ggplot(aes(x= taxon, y=log10.mass, fill=taxon))+ geom_boxplot(color="black", alpha= .3, na.rm = T)+geom_violin(alpha=.5, na.rm=T)+coord_flip()
homerange %>%
ggplot(aes(x= taxon, y=log10.mass, fill=taxon))+ geom_boxplot(color="black", alpha= .3, na.rm = T)+geom_violin(alpha=.5, na.rm=T)+coord_flip()+labs(title = Mass by Taxon)
homerange %>%
ggplot(aes(x= taxon, y=log10.mass, fill=taxon))+ geom_boxplot(color="black", alpha= .3, na.rm = T)+geom_violin(alpha=.5, na.rm=T)+coord_flip()+labs(title = "Mass by Taxon")
heartrate
heartrate_long <- heartrate %>%
pivot_longer(-patient, #patient does not pivot
names_to = "drug",
values_to = "heartrate"
)
heartrate_long
heartrate_long %>%
ggplot(aes(patient, drug, fill= heartrate)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red")
heartrate_diff <- heartrate%>%
mutate(across(c(a,b,c,d), ~ . - no_drug)) %>%
select(-no_drug) %>%
pivot_longer(-patient, #patient does not pivot
names_to = "drug",
values_to = "heartrate"
)
heartrate_diff
heartrate_diff %>%
ggplot(aes(patient, drug, fill= heartrate)) +
geom_tile()+
scale_fill_gradient2(low="green", mid = "white", high="red")
# scale_fill_graient2 lets you set a color direction for zero (mid), positive (high), and negative (low)
penguins
penguins %>%
ggplot(aes(species, body_mass_g, fill=sex))+ geom_tile()+scale_fill_gradient(low="purple", high="blue")
penguins_long %>% penguins %>% pivot_longer(-species, names_to="sex", values_to="body_mass_g") %>%
penguins_long
penguins_long %>% penguins %>% pivot_longer(-species, names_to="sex", values_to="body_mass_g") %>%
penguins_long
penguins_long %>% penguins %>% pivot_longer(-species, names_to="sex", values_to="body_mass_g") %>%
penguins_long %>% penguins %>% pivot_longer(-species, names_to="sex", values_to="body_mass_g")
penguins_long %>%
penguins%>%
pivot_longer(-species, names_to="sex", values_to="body_mass_g")
penguins_long %>%
penguins %>%
pivot_longer(-species, names_to="sex", values_to="body_mass_g")
penguins_long %>%
penguins %>%
pivot_longer(-species, names_to="sex", values_to="body_mass_g")
penguins_long <-
penguins %>%
pivot_longer(-species, names_to="sex", values_to="body_mass_g")
penguins_long <-
penguins %>%
pivot_longer(-species, names_to="sex", values_to="body_mass_g")
penguins_long <-
penguins %>%
pivot_longer(-species,
names_to="sex",
values_to="body_mass_g")
penguins_long <-
penguins %>%
group_by(sex) %>%
pivot_longer(-species,
names_to="sex",
values_to="body_mass_g")
penguins_long<-
penguins %>%
pivot_longer(-species,
names_to="sex",
values_to="body_mass_g")
penguins_long<-
penguins %>%
pivot_longer(-species,
names_to="island",
values_to="body_mass_g")
names(penguins)
head(penguins)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
nanno_1<-readr::read_csv("ph_nanno_1.csv")
setwd("~/Desktop/BIS15W2022_nrizzo/Final")
nanno_1<-readr::read_csv("data/ph_nanno_1.csv")
nanno_1<-readr::read_csv("data/ph_nanno_1.csv")
nanno_2<-readr::read_csv("data/ph_nanno_2.csv")
nanno_1<-clean_names(nanno_1)
glimpse(nanno_1)
nanno_1%>%
select(-c(x8))
nanno_1<-nanno_1 %>%
rename(ph1_7_6 = ph_7_6_2,
ph1_8_2 = ph_8_2_3,
ph2_7_6 = ph_7_6_4,
ph2_8_2 = ph_8_2_5,
ph3_8_2 = ph_8_2_6,
ph3_7_6 = ph_7_6_7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
nanno_1<-readr::read_csv("ph_nanno_1.csv")
nanno_1<-readr::read_csv("ph_nanno_set_1.csv")
nanno_1<-readr::read_csv("ph_nanno_set_1.csv")
setwd("~/Desktop/BIS15W2022_nrizzo/BIS15LW2022_Project-main/raw_data")
nanno_1<-readr::read_csv("raw_data/ph_nanno_set_1.csv")
nanno_2<-readr::read_csv("ph_nanno_set_2.csv")
nanno_2<-readr::read_csv("raw_data/ph_nanno_set_2.csv")
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
nanno_1<-readr::read_csv("raw_data/ph_nanno_set_1.csv")
nanno_1<-clean_names(nanno_1)
nanno_2<-readr::read_csv("raw_data/ph_nanno_set_2.csv")
nanno_1<-clean_names(nanno_1)
glimpse(nanno_1)
nanno_1%>%
select(-c(x8))
nanno_1%>%
select(-c(x10))
nanno_1<-nanno_1 %>%
rename(ph1_7_6 = ph_7_6_2,
ph1_8_2 = ph_8_2_3,
ph2_7_6 = ph_7_6_4,
ph2_8_2 = ph_8_2_5,
ph3_8_2 = ph_8_2_6,
ph3_7_6 = ph_7_6_7)
nanno_1
nanno_1
nanno_1<-nanno_1[,c(1,2,4,7,3,5,6)]
nanno_1
nanno_2
nanno_2<-clean_names(nanno_2)
nanno_2<-nanno_2 %>%
rename(ph1_7_6 = ph_7_6_2,
ph1_8_2 = ph_8_2_4,
ph2_7_6 = ph_7_6_3,
ph2_8_2 = ph_8_2_6,
ph3_8_2 = ph_8_2_7,
ph3_7_6 = ph_7_6_5)
nanno_2
nanno_2 %>%
select(-c(x8))
nanno_2<-nanno_2[,c(1,2,3,5,4,6,7)]
nanno_2
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(shiny)
library(lubridate)
library(dplyr)
chaeto_1 <- readr::read_csv("ph_chaeto_set_1.csv")
chaeto_1 <- readr::read_csv("raw_data/ph_chaeto_set_1.csv")
chaeto_2 <- readr::read_csv("raw_data/ph_chaeto_set_2.csv")
chaeto_1 <- clean_names(chaeto_1)
chaeto_1 <- chaeto_1%>%
select(-c(date, chn_1_events, time_stamp_utc))%>%
rename(ph1_8_2 = p_h_4,
ph1_7_6 = p_h_5,
ph2_7_6 = p_h_6,
ph3_7_6 = p_h_7,
ph2_8_2 = p_h_8,
ph3_8_2 = p_h_9)
chaeto_1
chaeto_1 <- chaeto_1[c(1,3,4,5,2,6,7)]
chaeto_1
chaeto_2 <- clean_names(chaeto_2)
chaeto_2 <- chaeto_2%>%
select(-c(date, chn_1_events, time_stamp_utc))%>%
rename(ph1_8_2 = p_h_5,
ph1_7_6 = p_h_4,
ph2_7_6 = p_h_7,
ph3_7_6 = p_h_9,
ph2_8_2 = p_h_6,
ph3_8_2 = p_h_8)
chaeto_2
chaeto_2 <- chaeto_2[c(1,2,5,7,3,4,6)]
chaeto_2
knitr::opts_chunk$set(echo = TRUE)
glimpse(chaeto_1)
chaeto_long_1<- chaeto_1 %>%
pivot_longer(names_to = relative_time,
values_to= ph)
chaeto_long_1<- chaeto_1 %>%
pivot_longer()
chaeto_1
chaeto_1 %>%
ggplot(aes(x=relative_time, y=ph1_7_6))+geom_point()
chaeto_1 %>%
ggplot(aes(x=relative_time, y=ph1_7_6))+geom_line()
ggplot(aes(x=relative_time, y=ph1_7_6, fill=ph2_7_6)+geom_line()
ggplot(aes(x=relative_time, y=ph1_7_6)+geom_line()
chaeto_1 %>%
ggplot(aes(x=relative_time, y=ph1_7_6)+geom_line()
ggplot(aes(x=relative_time, y=ph1_7_6)+geom_line()
chaeto_1 %>%
chaeto_1 %>%
ggplot(aes(x=relative_time, y=ph1_7_6))+geom_line()
chaeto_1 %>%
ggplot(aes(x=relative_time))+geom_line()
chaeto_1 %>%
ggplot(aes(x=relative_time, y=n, group= ph1_7_6, ph2_7_6))+geom_line()
chaeto_1 %>%
ggplot(aes(x=relative_time, y=ph1_7_6, ph2_7_6))+geom_line()
chaeto_1 %>%
ggplot(aes(x=relative_time, y=ph1_7_6, ph2_7_6, fill= ph1_7_6, ph1_7_6))+geom_line()
chaeto_1_long<- chaeto_1 %>%
pivot_longer(-relative_time,
names_to="flask", values_to="ph")
chaeto_1_long
chaeto_1_long %>%
ggplot(aes(x=relative_time, y=ph, fill=flask))+geom_line()
chaeto_1_long %>%
ggplot(aes(x=relative_time, y=ph, color=flask))+geom_line()
chaeto_1_long %>%
ggplot(aes(x=relative_time, y= log10(ph), color=flask))+geom_line()
chaeto_1_long %>%
ggplot(aes(x=relative_time, y= log10(ph), color=flask))+geom_line()+geom_jitter()
chaeto_1_long %>%
ggplot(aes(x=relative_time, y= log10(ph), color=flask))+geom_line()
chaeto_1_long %>%
ggplot(aes(x=relative_time, y=ph, color=flask))+geom_line()
chaeto_1_long %>%
filter(ph<=10) %>%
ggplot(aes(x=relative_time, y=, color=flask))+geom_line()
chaeto_1_long %>%
filter(ph<=10) %>%
ggplot(aes(x=relative_time, y=ph, color=flask))+geom_line()
chaeto_1_long %>%
filter(ph<=10, ph>=5.0) %>%
ggplot(aes(x=relative_time, y=ph, color=flask))+geom_line()
chaeto_1
chaeto_long_x<- chaeto_1 %>%
pivot_longer(names_to = time, values_to= relative_time)
chaeto_long_x<- chaeto_1 %>%
pivot_longer(cols = starts_with("ph"), names_to="flask",values_to="ph")
chaeto_long_x<- chaeto_1 %>%
pivot_longer(cols = starts_with("ph"), names_to="flask",values_to="ph")
chaeto_long_x
caeto_longagain<- chaeto_long_x %>%
pivot_longer(-flask, names_to = "time", values_to= relative_time)
caeto_longagain<- chaeto_long_x %>%
pivot_longer(-flask, names_to = "time", values_to= ph)
caeto_longagain<- chaeto_long_x %>%
pivot_longer(-flask, names_to = "time", values_to= "relative_time")
caeto_longagain
caeto_longagain<- chaeto_long_x %>%
pivot_longer(-flask,-ph, names_to = "time", values_to=relative_time)
chaeto_long_x
caeto_longagain<- chaeto_long_x %>%
pivot_longer(-c(flask,ph), names_to = "time", values_to=relative_time)
caeto_longagain<- chaeto_long_x %>%
pivot_longer(-c(flask,ph), names_to = "time", values_to="relative_time")
caeto_longagain<- chaeto_long_x %>%
pivot_longer(-c(flask,ph), names_to = "time", values_to="relative_time")
caeto_longagain
chaeto_wide_1 %>% chaeto_1 %>%
pivot_wider(names_from = starts_with("ph"), values_from=relative_time)
View(chaeto_1)
chaeto_1
chaeto_1
chaeto_wide_1 %>% chaeto_1 %>%
pivot_wider(names_from = starts_with("ph"), values_from=relative_time)
chaeto_wide_1 <- chaeto_1 %>%
pivot_wider(names_from = starts_with("ph"), values_from=relative_time)
